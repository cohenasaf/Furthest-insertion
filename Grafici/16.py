import matplotlib.pyplot as plt
import numpy as np

l = [('eil51', 1), ('berlin52', 1), ('st70', 2), ('pr76', 1), ('eil76', 1), ('rat99', 1), ('kroD100', 3), ('kroA100', 1), ('kroC100', 1), ('kroB100', 1), ('kroE100', 1), ('rd100', 1), ('eil101', 1), ('lin105', 1), ('pr107', 3), ('pr124', 3), ('bier127', 2), ('ch130', 3), ('pr136', 1), ('pr144', 3), ('kroA150', 3), ('ch150', 1), ('kroB150', 3), ('pr152', 1), ('u159', 3), ('rat195', 1), ('d198', 3), ('kroA200', 1), ('kroB200', 3), ('ts225', 2), ('tsp225', 3), ('pr226', 1), ('gil262', 1), ('pr264', 3), ('a280', 1), ('pr299', 2), ('lin318', 3), ('linhp318', 3), ('rd400', 3), ('fl417', 1), ('pr439', 2), ('pcb442', 3), ('d493', 1), ('u574', 3), ('rat575', 3), ('p654', 3), ('d657', 3), ('u724', 3), ('rat783', 3), ('pr1002', 2)]
dF = {'eil51': 3, 'berlin52': 3, 'st70': 3, 'pr76': 3, 'eil76': 5, 'rat99': 3, 'kroD100': 3, 'kroA100': 3, 'kroC100': 3, 'kroB100': 3, 'kroE100': 3, 'rd100': 3, 'eil101': 5, 'lin105': 3, 'pr107': 3, 'pr124': 3, 'bier127': 6, 'ch130': 3, 'pr136': 3, 'pr144': 3, 'kroA150': 5, 'ch150': 4, 'kroB150': 3, 'pr152': 3, 'u159': 3, 'rat195': 5, 'd198': 6, 'kroA200': 5, 'kroB200': 3, 'ts225': 6, 'tsp225': 4, 'pr226': 3, 'gil262': 6, 'pr264': 6, 'a280': 6, 'pr299': 3, 'lin318': 5, 'linhp318': 5, 'rd400': 6, 'fl417': 3, 'pr439': 6, 'pcb442': 6, 'd493': 6, 'u574': 6, 'rat575': 5, 'p654': 3, 'd657': 6, 'u724': 6, 'rat783': 6, 'pr1002': 6}

# Sample data (4 lists)
x = [x[0] for x in l[:50]]

y1 = [np.float64(0.000762012004852295), np.float64(0.0008045363426208496), np.float64(0.0014272785186767577), np.float64(0.00166628360748291), np.float64(0.0017493844032287597), np.float64(0.0028536486625671386), np.float64(0.0029301714897155763), np.float64(0.002896463871002197), np.float64(0.0029358863830566406), np.float64(0.0029176950454711916), np.float64(0.002886004447937012), np.float64(0.0031988859176635743), np.float64(0.003018972873687744), np.float64(0.003265221118927002), np.float64(0.003312423229217529), np.float64(0.004399707317352295), np.float64(0.004700899124145508), np.float64(0.004877371788024902), np.float64(0.005668742656707764), np.float64(0.006134021282196045), np.float64(0.006528811454772949), np.float64(0.0066240191459655765), np.float64(0.00663978099822998), np.float64(0.006720902919769287), np.float64(0.0071953248977661135), np.float64(0.010848767757415771), np.float64(0.011957976818084717), np.float64(0.011358990669250488), np.float64(0.011921916007995605), np.float64(0.015924181938171387), np.float64(0.015729730129241944), np.float64(0.01515735626220703), np.float64(0.021772856712341308), np.float64(0.02112032413482666), np.float64(0.023373053073883057), np.float64(0.029500398635864258), np.float64(0.03016951084136963), np.float64(0.03083501577377319), np.float64(0.0520378041267395), np.float64(0.05469136238098145), np.float64(0.05978153705596924), np.float64(0.061920361518859865), np.float64(0.07639926433563232), np.float64(0.10470996618270874), np.float64(0.10430738925933838), np.float64(0.13891007184982299), np.float64(0.13807718992233275), np.float64(0.16930856466293334), np.float64(0.1864340090751648), np.float64(0.3116109275817871)]
y2 = [np.float64(3.594398498535156e-05), np.float64(3.594636917114258e-05), np.float64(4.941463470458984e-05), np.float64(5.283832550048828e-05), np.float64(5.9032440185546874e-05), np.float64(7.273674011230468e-05), np.float64(7.233858108520508e-05), np.float64(7.192611694335938e-05), np.float64(7.213830947875976e-05), np.float64(7.117986679077149e-05), np.float64(7.00831413269043e-05), np.float64(8.546113967895508e-05), np.float64(7.692813873291016e-05), np.float64(7.87806510925293e-05), np.float64(7.838249206542969e-05), np.float64(8.822917938232422e-05), np.float64(9.111881256103516e-05), np.float64(9.213685989379883e-05), np.float64(0.00010849475860595703), np.float64(0.00011235713958740234), np.float64(0.00010908365249633788), np.float64(0.00011486291885375976), np.float64(0.00011701822280883789), np.float64(0.00011394023895263671), np.float64(0.0001140141487121582), np.float64(0.00014212369918823243), np.float64(0.00017161846160888673), np.float64(0.00014528036117553711), np.float64(0.00015426158905029296), np.float64(0.00019759416580200195), np.float64(0.0001981782913208008), np.float64(0.00018123388290405273), np.float64(0.00023834943771362306), np.float64(0.00022627830505371095), np.float64(0.00023674488067626954), np.float64(0.0002907609939575195), np.float64(0.00028084516525268556), np.float64(0.0002874159812927246), np.float64(0.0003966641426086426), np.float64(0.00041129589080810545), np.float64(0.00041681289672851563), np.float64(0.00043523788452148437), np.float64(0.0004925894737243653), np.float64(0.0005683708190917969), np.float64(0.0005634522438049316), np.float64(0.0006775569915771485), np.float64(0.0006576204299926758), np.float64(0.0007495236396789551), np.float64(0.0007563495635986328), np.float64(0.000994572639465332)]

# qualit√† Furthest

# Plotting each list with different color and marker
plt.figure(figsize=(14, 6))

plt.plot(x, y1, marker='o', color='blue', label='Random Insertion')
plt.plot(x, y2, marker='s', color='red', label='Random Insertion versione 2')

plt.xticks(rotation=45)
plt.xlabel('Prime 50 istanze TSP da TSP-LIB')
plt.ylabel('Media dei tempi di Random Insertion')
plt.yscale('log')
plt.title('Media dei tempi di Random Insertion')
plt.legend()  # Show legend based on labels

plt.grid(True)
plt.tight_layout()
plt.savefig("/home/asaf/Desktop/Furthest-insertion/Grafici/16.png")
plt.show()

