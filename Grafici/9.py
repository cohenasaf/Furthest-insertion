import matplotlib.pyplot as plt
import numpy as np

l = [('eil51', 1), ('berlin52', 1), ('st70', 2), ('pr76', 1), ('eil76', 1), ('rat99', 1), ('kroD100', 3), ('kroA100', 1), ('kroC100', 1), ('kroB100', 1), ('kroE100', 1), ('rd100', 1), ('eil101', 1), ('lin105', 1), ('pr107', 3), ('pr124', 3), ('bier127', 2), ('ch130', 3), ('pr136', 1), ('pr144', 3), ('kroA150', 3), ('ch150', 1), ('kroB150', 3), ('pr152', 1), ('u159', 3), ('rat195', 1), ('d198', 3), ('kroA200', 1), ('kroB200', 3), ('ts225', 2), ('tsp225', 3), ('pr226', 1), ('gil262', 1), ('pr264', 3), ('a280', 1), ('pr299', 2), ('lin318', 3), ('linhp318', 3), ('rd400', 3), ('fl417', 1), ('pr439', 2), ('pcb442', 3), ('d493', 1), ('u574', 3), ('rat575', 3), ('p654', 3), ('d657', 3), ('u724', 3), ('rat783', 3), ('pr1002', 2)]
dF = {'eil51': 3, 'berlin52': 3, 'st70': 3, 'pr76': 3, 'eil76': 5, 'rat99': 3, 'kroD100': 3, 'kroA100': 3, 'kroC100': 3, 'kroB100': 3, 'kroE100': 3, 'rd100': 3, 'eil101': 5, 'lin105': 3, 'pr107': 3, 'pr124': 3, 'bier127': 6, 'ch130': 3, 'pr136': 3, 'pr144': 3, 'kroA150': 5, 'ch150': 4, 'kroB150': 3, 'pr152': 3, 'u159': 3, 'rat195': 5, 'd198': 6, 'kroA200': 5, 'kroB200': 3, 'ts225': 6, 'tsp225': 4, 'pr226': 3, 'gil262': 6, 'pr264': 6, 'a280': 6, 'pr299': 3, 'lin318': 5, 'linhp318': 5, 'rd400': 6, 'fl417': 3, 'pr439': 6, 'pcb442': 6, 'd493': 6, 'u574': 6, 'rat575': 5, 'p654': 3, 'd657': 6, 'u724': 6, 'rat783': 6, 'pr1002': 6}

# Sample data (4 lists)
x = [x[0] for x in l[:30]]

y1 = [np.float64(1.32619994574664), np.float64(1.2370834552302974), np.float64(1.2178347005205097), np.float64(1.3579095936014207), np.float64(1.2417965082142208), np.float64(1.208508373118133), np.float64(1.290194154505099), np.float64(1.272848748411498), np.float64(1.2773870010112307), np.float64(1.2627318471625826), np.float64(1.2456382703240791), np.float64(1.28301632523202), np.float64(1.2753844473129514), np.float64(1.312877376571186), np.float64(1.1348048089271636), np.float64(1.1991716070689866), np.float64(1.2399844467618395), np.float64(1.2763351867258912), np.float64(1.2644075954163778), np.float64(1.1355912543469662), np.float64(1.272431316564485), np.float64(1.2079892224540183), np.float64(1.328184337359282), np.float64(1.1668848161516814), np.float64(1.2866927376898252), np.float64(1.1936851524114909), np.float64(1.2343693858068976), np.float64(1.273643046128054), np.float64(1.2541333685772234), np.float64(1.1767227932312965)]
y2 = [np.float64(1.1506499428498895), np.float64(1.1833968691709327), np.float64(1.1617242912497412), np.float64(1.1568393910599897), np.float64(1.1554256566233894), np.float64(1.1946694484642282), np.float64(1.187925202226035), np.float64(1.20336062821807), np.float64(1.2317398190949995), np.float64(1.2004384981626972), np.float64(1.196723606579058), np.float64(1.1845549741458932), np.float64(1.1594470797351775), np.float64(1.2560448991989743), np.float64(1.1883801264758678), np.float64(1.1474797112066697), np.float64(1.2160125860852413), np.float64(1.1855569684742653), np.float64(1.112015341592469), np.float64(1.2005031456313553), np.float64(1.1726405060728227), np.float64(1.214857487749715), np.float64(1.2001415313317694), np.float64(1.193628081090911), np.float64(1.2022346591321087), np.float64(1.2256464238117797), np.float64(1.1281155916695003), np.float64(1.2183554818568008), np.float64(1.225505087943976), np.float64(1.2216855697486446)]
y3 = [np.float64(1.1662812832172427), np.float64(1.2030860637829526), np.float64(1.1494601560246969), np.float64(1.174124834691368), np.float64(1.159838302998906), np.float64(1.2242252169432426), np.float64(1.1781179901963093), np.float64(1.202781594498149), np.float64(1.2421317126916107), np.float64(1.1751424010507823), np.float64(1.1837418898616243), np.float64(1.179617540310189), np.float64(1.1750856131222707), np.float64(1.2360454035096229), np.float64(1.1289416144237878), np.float64(1.1349225193383385), np.float64(1.1942974900905117), np.float64(1.169919967183157), np.float64(1.1430977659270483), np.float64(1.2050285986115403), np.float64(1.150086822080894), np.float64(1.2307252097672396), np.float64(1.1745701295205035), np.float64(1.2007939949920345), np.float64(1.1796564700827106), np.float64(1.2010249292963728), np.float64(1.1129208450193324), np.float64(1.2119084133410867), np.float64(1.2076252620110843), np.float64(1.2928627628731437)]
y4  =[np.float64(1.1680585921568438), np.float64(1.2084444618649426), np.float64(1.1776719473059927), np.float64(1.1792550392632466), np.float64(1.188405780843719), np.float64(1.2557415066078135), np.float64(1.214252945806672), np.float64(1.234015759357611), np.float64(1.2515451537945983), np.float64(1.209393284950021), np.float64(1.2319496326637047), np.float64(1.2065398980843316), np.float64(1.2169746495704912), np.float64(1.2305427477688438), np.float64(1.1550408342544287), np.float64(1.186149622888341), np.float64(1.2203031626543852), np.float64(1.2150165245613107), np.float64(1.1765419039395864), np.float64(1.2014060715048758), np.float64(1.2190537215466113), np.float64(1.2584923777774506), np.float64(1.2087308990700896), np.float64(1.17617476430654), np.float64(1.267772427156646), np.float64(1.2980740615325177), np.float64(1.13747322325629), np.float64(1.2555605428842918), np.float64(1.256797792892478), np.float64(1.3601683720150297)]
y5 = [np.float64(1.0756520915249779), np.float64(1.0872638072406913), np.float64(1.0833955798759), np.float64(1.1240827367827524), np.float64(1.100147620903755), np.float64(1.10145545562703), np.float64(1.0697432161587808), np.float64(1.0916329796582651), np.float64(1.0715708783458024), np.float64(1.0841978788202236), np.float64(1.0933250855856935), np.float64(1.0891523952214037), np.float64(1.1089090679657385), np.float64(1.1095888626464592), np.float64(1.048240109593638), np.float64(1.0790718637315337), np.float64(1.102845863993877), np.float64(1.0914585164153314), np.float64(1.113826734339921), np.float64(1.0670380247784346), np.float64(1.0956935463814026), np.float64(1.1055393636551283), np.float64(1.0914262805788242), np.float64(1.0510797131112055), np.float64(1.129001522290005), np.float64(1.1374610321951735), np.float64(1.0872831496097612), np.float64(1.0989249225677769), np.float64(1.0972021495589415), np.float64(1.1471192418824707)]

# qualità Furthest

# Plotting each list with different color and marker
plt.figure(figsize=(14, 6))

plt.plot(x, y1, marker='o', color='blue', label='Nearest Neighbor')
plt.plot(x, y2, marker='s', color='red', label='Nearest Insertion')
plt.plot(x, y3, marker='d', color='purple', label='Cheapest Insertion versione 3')
plt.plot(x, y4, marker='^', color='green', label='Farthest Insertion')
plt.plot(x, y5, marker='*', color='orange', label='Furthest Insertion versione 2')

plt.xticks(rotation=45)
plt.xlabel('Prime 30 istanze TSP da TSP-LIB')
plt.ylabel('Qualità medie trovate')
plt.yscale('log')
plt.title('Qualità delle soluzioni trovate')
plt.legend()  # Show legend based on labels

plt.grid(True)
plt.tight_layout()
plt.savefig("/home/asaf/Desktop/Furthest-insertion/Grafici/9.png")
plt.show()

