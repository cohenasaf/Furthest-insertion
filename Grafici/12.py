import matplotlib.pyplot as plt
import numpy as np

l = [('eil51', 1), ('berlin52', 1), ('st70', 2), ('pr76', 1), ('eil76', 1), ('rat99', 1), ('kroD100', 3), ('kroA100', 1), ('kroC100', 1), ('kroB100', 1), ('kroE100', 1), ('rd100', 1), ('eil101', 1), ('lin105', 1), ('pr107', 3), ('pr124', 3), ('bier127', 2), ('ch130', 3), ('pr136', 1), ('pr144', 3), ('kroA150', 3), ('ch150', 1), ('kroB150', 3), ('pr152', 1), ('u159', 3), ('rat195', 1), ('d198', 3), ('kroA200', 1), ('kroB200', 3), ('ts225', 2), ('tsp225', 3), ('pr226', 1), ('gil262', 1), ('pr264', 3), ('a280', 1), ('pr299', 2), ('lin318', 3), ('linhp318', 3), ('rd400', 3), ('fl417', 1), ('pr439', 2), ('pcb442', 3), ('d493', 1), ('u574', 3), ('rat575', 3), ('p654', 3), ('d657', 3), ('u724', 3), ('rat783', 3), ('pr1002', 2)]
dF = {'eil51': 3, 'berlin52': 3, 'st70': 3, 'pr76': 3, 'eil76': 5, 'rat99': 3, 'kroD100': 3, 'kroA100': 3, 'kroC100': 3, 'kroB100': 3, 'kroE100': 3, 'rd100': 3, 'eil101': 5, 'lin105': 3, 'pr107': 3, 'pr124': 3, 'bier127': 6, 'ch130': 3, 'pr136': 3, 'pr144': 3, 'kroA150': 5, 'ch150': 4, 'kroB150': 3, 'pr152': 3, 'u159': 3, 'rat195': 5, 'd198': 6, 'kroA200': 5, 'kroB200': 3, 'ts225': 6, 'tsp225': 4, 'pr226': 3, 'gil262': 6, 'pr264': 6, 'a280': 6, 'pr299': 3, 'lin318': 5, 'linhp318': 5, 'rd400': 6, 'fl417': 3, 'pr439': 6, 'pcb442': 6, 'd493': 6, 'u574': 6, 'rat575': 5, 'p654': 3, 'd657': 6, 'u724': 6, 'rat783': 6, 'pr1002': 6}

# Sample data (4 lists)
x = [x[0] for x in l[:30]]

y1 = [np.float64(5.0130728368458213e-11), np.float64(7.663899737053725e-11), np.float64(6.558423137903446e-11), np.float64(6.157108600746142e-11), np.float64(1.6127557387335402e-10), np.float64(3.398214175831526e-10), np.float64(5.113342638196627e-10), np.float64(3.2644113048263547e-10), np.float64(2.8490405270531484e-10), np.float64(1.9836775209114424e-10), np.float64(1.4548856483997956e-10), np.float64(1.0868449749068532e-10), np.float64(1.284846348426072e-10), np.float64(4.403842183364759e-10), np.float64(1.1449802684637691e-09), np.float64(3.6203800618750387e-09), np.float64(7.577345058962236e-10), np.float64(3.1868395922174385e-10), np.float64(1.2725423118808972e-09), np.float64(1.8163919094149606e-09), np.float64(3.0014051105808903e-09), np.float64(1.4075491543508176e-08), np.float64(1.1036734184699527e-08), np.float64(1.4925304702728683e-08), np.float64(1.5225326586687518e-08), np.float64(8.161043632526343e-09), np.float64(2.4553221260248394e-08), np.float64(2.1262345762806942e-08), np.float64(3.140123970979403e-09), np.float64(1.1938114425902315e-08)]
y2 =[np.float64(1.4114171108303709e-09), np.float64(7.726295621068855e-09), np.float64(4.194279404146072e-09), np.float64(4.094562905265775e-09), np.float64(3.6301333864230404e-09), np.float64(1.2144107921585601e-08), np.float64(6.594824776584573e-09), np.float64(8.749771831162434e-09), np.float64(9.616070747142659e-09), np.float64(3.6802613237796326e-09), np.float64(5.422818958322751e-09), np.float64(4.794167233512781e-09), np.float64(6.455289303630706e-09), np.float64(5.958400487315884e-09), np.float64(1.7123356178672112e-08), np.float64(3.6328507098915e-08), np.float64(8.946506449092341e-09), np.float64(1.6411062568977287e-08), np.float64(1.5399223656231698e-08), np.float64(1.8079777623825067e-08), np.float64(9.182637418234663e-08), np.float64(4.726161049518396e-07), np.float64(1.5241306849929967e-06), np.float64(2.6901478583454264e-07), np.float64(1.9778626003699174e-07), np.float64(9.580769415151734e-08), np.float64(3.183887071145364e-07), np.float64(1.9467280441745057e-07), np.float64(5.4018872668848404e-08), np.float64(1.552574761888081e-07)]
y3 = [np.float64(7.836395377580628e-07), np.float64(1.8002480661550634e-06), np.float64(2.7879981957084966e-06), np.float64(4.147283919854771e-06), np.float64(4.069840292112303e-06), np.float64(6.703013688564854e-06), np.float64(7.155791258492171e-06), np.float64(6.897430510997537e-06), np.float64(7.46302716684113e-06), np.float64(6.730674389723389e-06), np.float64(7.4624333991039306e-06), np.float64(6.810234156910157e-06), np.float64(7.359997166184939e-06), np.float64(7.285986238366604e-06), np.float64(1.0801384914947221e-05), np.float64(1.6319180034111016e-05), np.float64(1.1190443962158269e-05), np.float64(1.2773697906391134e-05), np.float64(1.3139358429157256e-05), np.float64(1.6763279034074684e-05), np.float64(1.9895321976827065e-05), np.float64(2.444621896426611e-05), np.float64(4.308650853033669e-05), np.float64(2.2485652454088267e-05), np.float64(3.651451335810521e-05), np.float64(3.167237372397267e-05), np.float64(3.389900564727099e-05), np.float64(3.083996491693029e-05), np.float64(2.7312459739528096e-05), np.float64(3.434625068763922e-05)]
y4 = [np.float64(7.161464679938945e-10), np.float64(9.162383156535725e-09), np.float64(1.2332997130215518e-08), np.float64(2.6132057428185356e-09), np.float64(2.8396766538207886e-09), np.float64(7.285311147597895e-09), np.float64(4.598694994228936e-09), np.float64(1.6520448866685907e-08), np.float64(5.960175002428515e-09), np.float64(4.0569614156993335e-09), np.float64(4.976078594154387e-09), np.float64(6.533476442882602e-09), np.float64(6.347103771986441e-09), np.float64(6.974512069746199e-09), np.float64(1.404591306425118e-07), np.float64(2.9770939340778573e-08), np.float64(1.651430054039338e-08), np.float64(1.3721264940613762e-08), np.float64(1.4770272235864469e-08), np.float64(2.8572878613886127e-08), np.float64(2.6818284492833297e-07), np.float64(1.1587443086682469e-07), np.float64(1.7311020333806933e-06), np.float64(1.928146988291246e-07), np.float64(6.39315646247951e-07), np.float64(1.434163088731566e-07), np.float64(2.6309859082971344e-07), np.float64(1.269925441192754e-07), np.float64(6.699664865550404e-08), np.float64(1.281940256831149e-07)]
y5 = [np.float64(3.28374978607826e-08), np.float64(1.9107240334506056e-07), np.float64(5.504569350591737e-08), np.float64(1.3717846800318512e-07), np.float64(7.785274194702653e-08), np.float64(2.38542021838839e-07), np.float64(1.67949794439437e-07), np.float64(2.6325714954964494e-07), np.float64(5.200927468877126e-07), np.float64(1.6898808536893737e-07), np.float64(2.609663825921871e-07), np.float64(2.374881088314851e-07), np.float64(3.022799829523137e-07), np.float64(3.490514882514617e-07), np.float64(1.255426109872815e-06), np.float64(1.8702369694955223e-05), np.float64(9.099035041515435e-07), np.float64(4.12531961978857e-07), np.float64(5.484422814561185e-07), np.float64(1.159788160811104e-06), np.float64(8.243546758330923e-06), np.float64(3.889920261804036e-06), np.float64(6.286478727014355e-06), np.float64(4.4199051609666635e-06), np.float64(1.0245180868218996e-05), np.float64(3.0303224981423686e-06), np.float64(5.943895689733835e-06), np.float64(2.6596313398385975e-06), np.float64(2.2027721919300802e-06), np.float64(2.7426495797215016e-06)]

#print(np.mean(y1))
#print(np.mean(y2))
#print(np.mean(y3))
#print(np.mean(y4))
#print(np.mean(y5))
#exit()

# qualit√† Furthest

# Plotting each list with different color and marker
plt.figure(figsize=(14, 6))

plt.plot(x, y1, marker='o', color='blue', label='Nearest Neighbor')
plt.plot(x, y2, marker='s', color='red', label='Nearest Insertion')
plt.plot(x, y3, marker='d', color='purple', label='Cheapest Insertion versione 3')
plt.plot(x, y4, marker='^', color='green', label='Farthest Insertion')
plt.plot(x, y5, marker='*', color='orange', label='Furthest Insertion versione 2')

plt.xticks(rotation=45)
plt.xlabel('Prime 30 istanze TSP da TSP-LIB')
plt.ylabel('Varianza dei tempi al variare dell\'inizializzazione')
plt.yscale('log')
plt.title('Varianza dei tempi')
plt.legend()  # Show legend based on labels

plt.grid(True)
plt.tight_layout()
plt.savefig("/home/asaf/Desktop/Furthest-insertion/Grafici/12.png")
plt.show()

