import matplotlib.pyplot as plt
import numpy as np

l = [('eil51', 1), ('berlin52', 1), ('st70', 2), ('pr76', 1), ('eil76', 1), ('rat99', 1), ('kroD100', 3), ('kroA100', 1), ('kroC100', 1), ('kroB100', 1), ('kroE100', 1), ('rd100', 1), ('eil101', 1), ('lin105', 1), ('pr107', 3), ('pr124', 3), ('bier127', 2), ('ch130', 3), ('pr136', 1), ('pr144', 3), ('kroA150', 3), ('ch150', 1), ('kroB150', 3), ('pr152', 1), ('u159', 3), ('rat195', 1), ('d198', 3), ('kroA200', 1), ('kroB200', 3), ('ts225', 2), ('tsp225', 3), ('pr226', 1), ('gil262', 1), ('pr264', 3), ('a280', 1), ('pr299', 2), ('lin318', 3), ('linhp318', 3), ('rd400', 3), ('fl417', 1), ('pr439', 2), ('pcb442', 3), ('d493', 1), ('u574', 3), ('rat575', 3), ('p654', 3), ('d657', 3), ('u724', 3), ('rat783', 3), ('pr1002', 2)]
dF = {'eil51': 3, 'berlin52': 3, 'st70': 3, 'pr76': 3, 'eil76': 5, 'rat99': 3, 'kroD100': 3, 'kroA100': 3, 'kroC100': 3, 'kroB100': 3, 'kroE100': 3, 'rd100': 3, 'eil101': 5, 'lin105': 3, 'pr107': 3, 'pr124': 3, 'bier127': 6, 'ch130': 3, 'pr136': 3, 'pr144': 3, 'kroA150': 5, 'ch150': 4, 'kroB150': 3, 'pr152': 3, 'u159': 3, 'rat195': 5, 'd198': 6, 'kroA200': 5, 'kroB200': 3, 'ts225': 6, 'tsp225': 4, 'pr226': 3, 'gil262': 6, 'pr264': 6, 'a280': 6, 'pr299': 3, 'lin318': 5, 'linhp318': 5, 'rd400': 6, 'fl417': 3, 'pr439': 6, 'pcb442': 6, 'd493': 6, 'u574': 6, 'rat575': 5, 'p654': 3, 'd657': 6, 'u724': 6, 'rat783': 6, 'pr1002': 6}

# Sample data (4 lists)
x = [x[0] for x in l[:50]]

y1 = [np.float64(1.2775416280419451e-11), np.float64(8.09699827186705e-10), np.float64(3.1711508086118553e-10), np.float64(2.3183744701782412e-10), np.float64(1.1003521649399771e-10), np.float64(1.0153478058327892e-09), np.float64(1.6685817172401583e-11), np.float64(1.5438374134646434e-10), np.float64(7.734840323792015e-11), np.float64(9.417590263183227e-11), np.float64(3.4775936796904715e-10), np.float64(1.0694947150113873e-11), np.float64(8.934236461755063e-11), np.float64(3.096401712809893e-10), np.float64(2.827805190008803e-10), np.float64(3.8251869227678976e-10), np.float64(4.785356111369765e-10), np.float64(2.8934593387930363e-10), np.float64(9.997899041991333e-10), np.float64(4.9098417775894635e-09), np.float64(2.4994704403979998e-08), np.float64(9.718796434299292e-10), np.float64(2.078924850934527e-08), np.float64(1.0192002264375334e-09), np.float64(9.477155060721998e-10), np.float64(5.193936090108763e-09), np.float64(4.771922021973296e-09), np.float64(1.500052349001635e-09), np.float64(1.4424431071802245e-09), np.float64(2.1936402561095746e-09), np.float64(3.1593577887178978e-09), np.float64(1.6496977650604096e-08), np.float64(6.247421694638432e-08), np.float64(4.997002633899683e-09), np.float64(9.424076097275247e-09), np.float64(1.98341437851468e-08), np.float64(2.2295856751952672e-08), np.float64(1.1363483395143704e-07), np.float64(1.8232183265354252e-07), np.float64(8.276639903215254e-08), np.float64(1.4746700799150858e-07), np.float64(1.808684993420684e-07), np.float64(1.6232332541221693e-07), np.float64(1.1853072052758762e-07), np.float64(3.566689387923817e-07), np.float64(2.3089352382044124e-07), np.float64(9.66827443562579e-07), np.float64(5.611294477603224e-07), np.float64(4.318051537097744e-06), np.float64(6.64725625640017e-06)]
y2 = [np.float64(8.464661505058756e-10), np.float64(8.953009796641708e-08), np.float64(7.640680621534556e-10), np.float64(2.5660988001163786e-09), np.float64(1.7507312577436097e-09), np.float64(6.975347446314119e-09), np.float64(3.5559503430704355e-09), np.float64(4.53355752938478e-09), np.float64(4.908874160491905e-09), np.float64(2.880297387264363e-09), np.float64(5.8640311806357205e-09), np.float64(2.546877340137143e-09), np.float64(4.607996260119763e-09), np.float64(5.311974717869816e-09), np.float64(4.850092381047943e-09), np.float64(1.432407245260947e-08), np.float64(6.763590789660156e-09), np.float64(8.440130585540827e-09), np.float64(9.289598636996743e-09), np.float64(1.3913479351401747e-06), np.float64(2.3820239158567347e-06), np.float64(1.951542515143956e-08), np.float64(4.447174434716317e-06), np.float64(5.1739223607683015e-08), np.float64(2.9004198012216872e-08), np.float64(1.0143964402686833e-07), np.float64(5.300195709878607e-08), np.float64(3.2138132155523635e-08), np.float64(4.0935709080258675e-08), np.float64(1.218421778048651e-07), np.float64(1.0406644378235798e-07), np.float64(1.1142627158733376e-07), np.float64(5.043006245841752e-07), np.float64(1.8060698309341205e-07), np.float64(1.483794703460717e-07), np.float64(1.4949137877806606e-07), np.float64(1.9561862757200288e-07), np.float64(7.782373168510047e-06), np.float64(1.4818682848272148e-06), np.float64(2.066271115950258e-06), np.float64(2.167152756271662e-07), np.float64(5.348414773607146e-06), np.float64(6.281465778101846e-07), np.float64(1.2307970998790553e-05), np.float64(1.3592295087363485e-05), np.float64(2.632473132848645e-06), np.float64(1.4301458443668479e-05), np.float64(1.776982950559613e-05), np.float64(3.164365029576288e-05), np.float64(1.8735818289883355e-05)]
y3 = [np.float64(6.8053934398903955e-09), np.float64(4.7223593057310615e-07), np.float64(3.4364100558548214e-06), np.float64(3.3484345118495185e-06), np.float64(7.228606963707306e-06), np.float64(3.892752195042704e-06), np.float64(9.94380808080564e-06), np.float64(6.525090605435935e-06), np.float64(6.900467476924632e-06), np.float64(6.9209039884299266e-06), np.float64(6.0722635373622316e-06), np.float64(6.623066730639949e-06), np.float64(7.344143001972724e-06), np.float64(5.8202608903457065e-06), np.float64(9.117595541852098e-06), np.float64(1.1194267011092053e-05), np.float64(1.1376032698962035e-05), np.float64(1.439383015963358e-05), np.float64(1.4370740860272235e-05), np.float64(1.4630955084129484e-05), np.float64(2.3280864169237248e-05), np.float64(1.3898150993441049e-05), np.float64(7.736989610975797e-05), np.float64(1.8120193379331797e-05), np.float64(2.147985927308582e-05), np.float64(3.3528807295510885e-05), np.float64(2.8000270074244323e-05), np.float64(2.8113735506849476e-05), np.float64(3.130837255355345e-05), np.float64(3.327048837874713e-05), np.float64(3.5191257923514736e-05), np.float64(3.489147751224664e-05), np.float64(4.94502215593684e-05), np.float64(3.4913038843455974e-05), np.float64(3.1694172192828774e-05), np.float64(7.271624770623929e-06), np.float64(1.4586159772420617e-05), np.float64(0.0001493559169892933), np.float64(0.0001195196594964898), np.float64(8.283902082212081e-05), np.float64(5.4302600084952266e-05), np.float64(7.922213355001872e-05), np.float64(0.00011794938588366223), np.float64(0.00030516290417210713), np.float64(0.0003070547432302817), np.float64(0.0004175269333840959), np.float64(0.0005023709471485916), np.float64(0.0002475948499311187), np.float64(0.000743611620947604), np.float64(0.0005273188757820435)]
y4 = [np.float64(6.99857736208287e-10), np.float64(6.329260656912084e-08), np.float64(6.6901934303587025e-09), np.float64(9.480339144829485e-09), np.float64(1.876523327837276e-09), np.float64(3.4800181936134324e-09), np.float64(2.814335289258451e-09), np.float64(2.868667223765442e-09), np.float64(2.421338649583049e-09), np.float64(1.642476078700383e-08), np.float64(1.1465660207932158e-08), np.float64(1.2341131139237407e-09), np.float64(4.154474453343937e-09), np.float64(5.151713935447333e-09), np.float64(1.6855204876264907e-09), np.float64(1.5441036680385876e-08), np.float64(9.470095960750769e-09), np.float64(1.1415152698646124e-08), np.float64(4.501281836155613e-09), np.float64(3.66305023788982e-07), np.float64(5.0987400044277834e-08), np.float64(2.8507768092822514e-08), np.float64(7.256518596818749e-06), np.float64(4.626662587270403e-08), np.float64(2.387765277944709e-08), np.float64(9.652583288897175e-06), np.float64(4.978371400454762e-07), np.float64(6.400818278962107e-08), np.float64(3.724525114989774e-08), np.float64(6.907481790108248e-08), np.float64(1.6071783463189603e-07), np.float64(9.346969406465177e-08), np.float64(1.0174085991820902e-06), np.float64(1.20916825352424e-07), np.float64(4.051501761637155e-08), np.float64(2.3348046397586587e-07), np.float64(1.3710552977386213e-07), np.float64(4.713683716062178e-06), np.float64(8.229852790009318e-07), np.float64(4.510120518830263e-06), np.float64(1.0085769444856395e-06), np.float64(2.287386588903928e-06), np.float64(5.061255247028385e-05), np.float64(1.1217125037745743e-05), np.float64(9.179087587085633e-06), np.float64(3.4614722189871826e-05), np.float64(1.575448813056823e-05), np.float64(2.0985958735195715e-05), np.float64(8.384363261995987e-05), np.float64(1.3486249584246936e-05)]
y5 = [np.float64(1.6476824384881183e-08), np.float64(6.488585567865356e-07), np.float64(4.965636776432802e-08), np.float64(2.304025308319524e-07), np.float64(3.7130581063138384e-08), np.float64(3.112340861832763e-07), np.float64(1.8334488402160784e-07), np.float64(3.1468523999933493e-07), np.float64(1.3077065247557584e-07), np.float64(1.6514474282303127e-07), np.float64(1.8370832592040642e-07), np.float64(1.1555706294075208e-07), np.float64(4.1845757365877033e-07), np.float64(4.038647402637708e-07), np.float64(5.358856236625796e-07), np.float64(1.7001440406119175e-05), np.float64(9.355691139489865e-07), np.float64(4.76973777239209e-07), np.float64(1.752013046996126e-07), np.float64(2.1506123408698843e-06), np.float64(2.124974985861172e-05), np.float64(3.244378483202581e-07), np.float64(3.53948620158917e-06), np.float64(2.838219725589397e-06), np.float64(1.3890627251100795e-06), np.float64(1.7976773680175032e-05), np.float64(1.6293627793118049e-06), np.float64(1.2883849342415488e-06), np.float64(1.4095043349016124e-06), np.float64(2.7182218131827087e-06), np.float64(2.936588962256792e-06), np.float64(0.00030125836931844675), np.float64(1.1181345622048868e-05), np.float64(2.811427294204805e-06), np.float64(6.73494002896291e-06), np.float64(2.1658752322508688e-05), np.float64(3.7986421732227882e-06), np.float64(4.658778596692059e-05), np.float64(9.127970339903869e-06), np.float64(0.005342355830580773), np.float64(5.010650664360127e-05), np.float64(0.0001385532149326707), np.float64(0.00011781547488155298), np.float64(7.430078358922288e-05), np.float64(0.00015650945427339024), np.float64(0.02425391975470461), np.float64(0.00017216959603999274), np.float64(0.0002110395794977649), np.float64(0.0006743327270912402), np.float64(0.002071707934546083)]
#print(np.mean(y1))
#print(np.mean(y2))
#print(np.mean(y3))
#print(np.mean(y4))
#print(np.mean(y5))
#exit()

# qualità Furthest

# Plotting each list with different color and marker
plt.figure(figsize=(14, 6))

plt.plot(x, y1, marker='o', color='blue', label='Nearest Neighbor')
plt.plot(x, y2, marker='s', color='red', label='Nearest Insertion')
plt.plot(x, y3, marker='d', color='purple', label='Cheapest Insertion versione 3')
plt.plot(x, y4, marker='^', color='green', label='Farthest Insertion')
plt.plot(x, y5, marker='*', color='orange', label='Furthest Insertion versione 2')

plt.xticks(rotation=45)
plt.xlabel('Prime 50 istanze TSP da TSP-LIB')
plt.ylabel('Varianza dei tempi al variare dell\'inizializzazione')
plt.yscale('log')
plt.title('Varianza dei tempi')
plt.legend()  # Show legend based on labels

plt.grid(True)
plt.tight_layout()
plt.savefig("/home/asaf/Desktop/Furthest-insertion/Grafici/12.png")
plt.show()

