import matplotlib.pyplot as plt
import numpy as np

l = [('eil51', 1), ('berlin52', 1), ('st70', 2), ('pr76', 1), ('eil76', 1), ('rat99', 1), ('kroD100', 3), ('kroA100', 1), ('kroC100', 1), ('kroB100', 1), ('kroE100', 1), ('rd100', 1), ('eil101', 1), ('lin105', 1), ('pr107', 3), ('pr124', 3), ('bier127', 2), ('ch130', 3), ('pr136', 1), ('pr144', 3), ('kroA150', 3), ('ch150', 1), ('kroB150', 3), ('pr152', 1), ('u159', 3), ('rat195', 1), ('d198', 3), ('kroA200', 1), ('kroB200', 3), ('ts225', 2), ('tsp225', 3), ('pr226', 1), ('gil262', 1), ('pr264', 3), ('a280', 1), ('pr299', 2), ('lin318', 3), ('linhp318', 3), ('rd400', 3), ('fl417', 1), ('pr439', 2), ('pcb442', 3), ('d493', 1), ('u574', 3), ('rat575', 3), ('p654', 3), ('d657', 3), ('u724', 3), ('rat783', 3), ('pr1002', 2)]
dF = {'eil51': 3, 'berlin52': 3, 'st70': 3, 'pr76': 3, 'eil76': 5, 'rat99': 3, 'kroD100': 3, 'kroA100': 3, 'kroC100': 3, 'kroB100': 3, 'kroE100': 3, 'rd100': 3, 'eil101': 5, 'lin105': 3, 'pr107': 3, 'pr124': 3, 'bier127': 6, 'ch130': 3, 'pr136': 3, 'pr144': 3, 'kroA150': 5, 'ch150': 4, 'kroB150': 3, 'pr152': 3, 'u159': 3, 'rat195': 5, 'd198': 6, 'kroA200': 5, 'kroB200': 3, 'ts225': 6, 'tsp225': 4, 'pr226': 3, 'gil262': 6, 'pr264': 6, 'a280': 6, 'pr299': 3, 'lin318': 5, 'linhp318': 5, 'rd400': 6, 'fl417': 3, 'pr439': 6, 'pcb442': 6, 'd493': 6, 'u574': 6, 'rat575': 5, 'p654': 3, 'd657': 6, 'u724': 6, 'rat783': 6, 'pr1002': 6}

# Sample data (4 lists)
x = [x[0] for x in l[:50]]

y1 = [np.float64(0.0007476611740956741), np.float64(0.0014173224860096708), np.float64(0.0008887522817243107), np.float64(0.0006924860370204973), np.float64(0.0004489841825413835), np.float64(0.0006185679800081921), np.float64(0.0006711053574293788), np.float64(0.0011732693421132472), np.float64(0.0008050610282528902), np.float64(0.00046037120927389856), np.float64(0.0007380336235733738), np.float64(0.00098152504516632), np.float64(0.0004109969850221905), np.float64(0.0007413357598623022), np.float64(0.0001311959205516788), np.float64(0.0008734872677679227), np.float64(0.0007390584714927616), np.float64(0.000483998281118971), np.float64(0.0004705248941162865), np.float64(0.0006398518660772638), np.float64(0.0004420984522735456), np.float64(0.00060258978505184), np.float64(0.0004973069694054334), np.float64(0.0002770105342706084), np.float64(0.0011155125442500456), np.float64(0.0003593050895880579), np.float64(0.0002543960140235159), np.float64(0.00048288516094341773), np.float64(0.00037473691534887355), np.float64(0.0006027901265419693), np.float64(0.0003490704982994056), np.float64(0.000746386591500654), np.float64(0.0002659769958695373), np.float64(0.0003651824401385302), np.float64(0.0005621181248398569), np.float64(0.0003240954043734008), np.float64(0.0002089256715653817), np.float64(0.00021529864392967282), np.float64(0.00013670096516787508), np.float64(0.0008093418442136145), np.float64(0.0003147082031437875), np.float64(0.00018924819859789007), np.float64(0.0001990069527438062), np.float64(0.00013637327262039248), np.float64(0.00011851649524101233), np.float64(0.0004841674732204679), np.float64(0.00014758017977768037), np.float64(8.677615879857918e-05), np.float64(0.0001060037333958121), np.float64(0.00011906427829239149)]
y2 = [np.float64(0.048292849703261205), np.float64(0.04380867489977823), np.float64(0.0589785635788384), np.float64(0.06015744869134904), np.float64(0.03955366276707621), np.float64(0.09643548516285072), np.float64(0.10748481580955101), np.float64(0.15294504990229232), np.float64(0.17067765356166018), np.float64(0.11853859097615749), np.float64(0.17335767838839689), np.float64(0.0910196006679565), np.float64(0.03956627666619582), np.float64(0.17838311215021843), np.float64(0.39811651719879615), np.float64(0.2306320519071451), np.float64(0.024725372211290897), np.float64(0.0714692039562634), np.float64(0.10172082160753192), np.float64(0.18169639861238385), np.float64(0.14495242046344636), np.float64(0.07494333674523868), np.float64(0.17246274735391762), np.float64(0.31285439635461976), np.float64(0.1446180431173784), np.float64(0.14395639092488963), np.float64(0.21989617658186308), np.float64(0.15135615025802898), np.float64(0.12050003782297491), np.float64(0.15691225288696406), np.float64(0.09193149172898385), np.float64(0.3059489659570781), np.float64(0.08813624212481903), np.float64(0.7149939802437865), np.float64(0.1268307326417776), np.float64(0.16030212423374834), np.float64(0.12734831434452312), np.float64(0.10906287797162356), np.float64(0.07580079000334433), np.float64(1.0329735457233946), np.float64(0.14177922336091991), np.float64(0.0900685457095723), np.float64(0.062296641202422356), np.float64(0.1327669054440602), np.float64(0.13269948068598802), np.float64(1.3729794941797777), np.float64(0.07048572553645104), np.float64(0.1177217503584549), np.float64(0.14611938505160244), np.float64(0.10985064199193886)]


# qualità Furthest

# Plotting each list with different color and marker
plt.figure(figsize=(14, 6))

plt.plot(x, y1, marker='o', color='blue', label='Random Insertion')
plt.plot(x, y2, marker='s', color='red', label='Random Insertion versione 2')

plt.xticks(rotation=45)
plt.xlabel('Prime 50 istanze TSP da TSP-LIB')
plt.ylabel('Varianza delle qualità trovate')
plt.yscale('log')
plt.title('Varianza delle qualità trovate')
plt.legend()  # Show legend based on labels

plt.grid(True)
plt.tight_layout()
plt.savefig("/home/asaf/Desktop/Furthest-insertion/Grafici/15.png")
plt.show()

