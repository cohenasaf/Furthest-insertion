import matplotlib.pyplot as plt
import numpy as np

l = [('eil51', 1), ('berlin52', 1), ('st70', 2), ('pr76', 1), ('eil76', 1), ('rat99', 1), ('kroD100', 3), ('kroA100', 1), ('kroC100', 1), ('kroB100', 1), ('kroE100', 1), ('rd100', 1), ('eil101', 1), ('lin105', 1), ('pr107', 3), ('pr124', 3), ('bier127', 2), ('ch130', 3), ('pr136', 1), ('pr144', 3), ('kroA150', 3), ('ch150', 1), ('kroB150', 3), ('pr152', 1), ('u159', 3), ('rat195', 1), ('d198', 3), ('kroA200', 1), ('kroB200', 3), ('ts225', 2), ('tsp225', 3), ('pr226', 1), ('gil262', 1), ('pr264', 3), ('a280', 1), ('pr299', 2), ('lin318', 3), ('linhp318', 3), ('rd400', 3), ('fl417', 1), ('pr439', 2), ('pcb442', 3), ('d493', 1), ('u574', 3), ('rat575', 3), ('p654', 3), ('d657', 3), ('u724', 3), ('rat783', 3), ('pr1002', 2)]
dF = {'eil51': 3, 'berlin52': 3, 'st70': 3, 'pr76': 3, 'eil76': 5, 'rat99': 3, 'kroD100': 3, 'kroA100': 3, 'kroC100': 3, 'kroB100': 3, 'kroE100': 3, 'rd100': 3, 'eil101': 5, 'lin105': 3, 'pr107': 3, 'pr124': 3, 'bier127': 6, 'ch130': 3, 'pr136': 3, 'pr144': 3, 'kroA150': 5, 'ch150': 4, 'kroB150': 3, 'pr152': 3, 'u159': 3, 'rat195': 5, 'd198': 6, 'kroA200': 5, 'kroB200': 3, 'ts225': 6, 'tsp225': 4, 'pr226': 3, 'gil262': 6, 'pr264': 6, 'a280': 6, 'pr299': 3, 'lin318': 5, 'linhp318': 5, 'rd400': 6, 'fl417': 3, 'pr439': 6, 'pcb442': 6, 'd493': 6, 'u574': 6, 'rat575': 5, 'p654': 3, 'd657': 6, 'u724': 6, 'rat783': 6, 'pr1002': 6}

# Sample data (4 lists)
x = [x[0] for x in l[:50]]

y1 = [np.float64(8.65340232849121e-05), np.float64(9.701251983642578e-05), np.float64(0.00016402006149291993), np.float64(0.00019356012344360352), np.float64(0.0001797199249267578), np.float64(0.00032025575637817383), np.float64(0.00029244422912597654), np.float64(0.00030351877212524413), np.float64(0.000303184986114502), np.float64(0.00029354095458984376), np.float64(0.0003076910972595215), np.float64(0.0002876400947570801), np.float64(0.00030068159103393557), np.float64(0.0003563284873962402), np.float64(0.00033112764358520506), np.float64(0.00045261383056640627), np.float64(0.00045734643936157227), np.float64(0.0005153775215148926), np.float64(0.0005715131759643554), np.float64(0.0006989240646362305), np.float64(0.000762486457824707), np.float64(0.0006881356239318848), np.float64(0.0008616805076599121), np.float64(0.0006976604461669921), np.float64(0.0007466673851013184), np.float64(0.0011410474777221679), np.float64(0.0011929035186767577), np.float64(0.0011620521545410156), np.float64(0.0011531472206115722), np.float64(0.0014202237129211427), np.float64(0.0014212846755981446), np.float64(0.0015857219696044922), np.float64(0.0021352887153625487), np.float64(0.0022001266479492188), np.float64(0.0022487640380859375), np.float64(0.0027320504188537596), np.float64(0.002919721603393555), np.float64(0.00323638916015625), np.float64(0.004962444305419922), np.float64(0.00550844669342041), np.float64(0.006130361557006836), np.float64(0.006524777412414551), np.float64(0.007819557189941406), np.float64(0.011308133602142334), np.float64(0.011736905574798584), np.float64(0.014712607860565186), np.float64(0.01567678451538086), np.float64(0.019019699096679686), np.float64(0.023387932777404787), np.float64(0.03549848794937134)]
y2 = [np.float64(0.001078629493713379), np.float64(0.001213407516479492), np.float64(0.0019734740257263184), np.float64(0.0023717284202575684), np.float64(0.0023241281509399415), np.float64(0.003975319862365723), np.float64(0.004042291641235351), np.float64(0.00403064489364624), np.float64(0.004037296772003174), np.float64(0.004046404361724853), np.float64(0.0040278792381286625), np.float64(0.004004812240600586), np.float64(0.0041029095649719235), np.float64(0.004407894611358642), np.float64(0.004566752910614013), np.float64(0.006202471256256103), np.float64(0.00641857385635376), np.float64(0.006761205196380615), np.float64(0.007393848896026611), np.float64(0.008766376972198486), np.float64(0.009590888023376464), np.float64(0.0090012788772583), np.float64(0.009851658344268798), np.float64(0.00939549207687378), np.float64(0.010086190700531007), np.float64(0.0152573823928833), np.float64(0.01569697856903076), np.float64(0.01583552360534668), np.float64(0.016022038459777833), np.float64(0.020305824279785157), np.float64(0.0202730655670166), np.float64(0.020534753799438477), np.float64(0.027779507637023925), np.float64(0.027945387363433837), np.float64(0.031120169162750243), np.float64(0.03549004793167114), np.float64(0.04034898281097412), np.float64(0.04153977632522583), np.float64(0.06562156677246093), np.float64(0.0717149019241333), np.float64(0.07825087308883667), np.float64(0.08012900352478028), np.float64(0.09939961433410645), np.float64(0.13772478103637695), np.float64(0.13795710802078248), np.float64(0.18144257068634034), np.float64(0.1834063410758972), np.float64(0.22600994110107422), np.float64(0.2666385531425476), np.float64(0.44593489170074463)]
y3 = [np.float64(0.002815353870391846), np.float64(0.003134119510650635), np.float64(0.006162726879119873), np.float64(0.006783699989318848), np.float64(0.00718010663986206), np.float64(0.011507892608642578), np.float64(0.013425695896148681), np.float64(0.012011349201202393), np.float64(0.012015593051910401), np.float64(0.012113285064697266), np.float64(0.011899280548095702), np.float64(0.01200706958770752), np.float64(0.012407982349395752), np.float64(0.013215470314025878), np.float64(0.01521146297454834), np.float64(0.01936671733856201), np.float64(0.021274268627166748), np.float64(0.021877813339233398), np.float64(0.022971224784851075), np.float64(0.028788816928863526), np.float64(0.03111586570739746), np.float64(0.027599453926086426), np.float64(0.03291893005371094), np.float64(0.028952622413635255), np.float64(0.03426494598388672), np.float64(0.04954049587249756), np.float64(0.05284991264343262), np.float64(0.05088553428649902), np.float64(0.05575640201568603), np.float64(0.07101272344589234), np.float64(0.07176033258438111), np.float64(0.06623106002807617), np.float64(0.09340779781341553), np.float64(0.10029189586639405), np.float64(0.10462532043457032), np.float64(0.12590534687042237), np.float64(0.14342401027679444), np.float64(0.14833419322967528), np.float64(0.24896911382675171), np.float64(0.25115551948547366), np.float64(0.304039454460144), np.float64(0.30888866186141967), np.float64(0.3581228494644165), np.float64(0.5597206354141235), np.float64(0.5631559729576111), np.float64(0.7357736706733704), np.float64(0.7256323218345642), np.float64(0.9040811896324158), np.float64(1.1239006519317627), np.float64(1.8122980833053588)]
y4 = [np.float64(0.001146519184112549), np.float64(0.0012389898300170898), np.float64(0.002122080326080322), np.float64(0.002535557746887207), np.float64(0.002467620372772217), np.float64(0.004214560985565186), np.float64(0.004293370246887207), np.float64(0.0042752385139465336), np.float64(0.004283761978149414), np.float64(0.004332053661346436), np.float64(0.004279887676239014), np.float64(0.004245984554290772), np.float64(0.004376709461212158), np.float64(0.00470430850982666), np.float64(0.004827713966369629), np.float64(0.006607508659362793), np.float64(0.0068383455276489254), np.float64(0.007198548316955567), np.float64(0.007862865924835205), np.float64(0.009176456928253173), np.float64(0.009913766384124756), np.float64(0.009618473052978516), np.float64(0.010942196846008301), np.float64(0.009910130500793457), np.float64(0.010824751853942872), np.float64(0.017008697986602782), np.float64(0.01682215929031372), np.float64(0.01704235076904297), np.float64(0.01706486940383911), np.float64(0.021667826175689697), np.float64(0.021806466579437255), np.float64(0.02189122438430786), np.float64(0.030229854583740234), np.float64(0.029902398586273193), np.float64(0.033935940265655516), np.float64(0.038852500915527347), np.float64(0.04386240243911743), np.float64(0.04503244161605835), np.float64(0.07160940170288085), np.float64(0.0779498815536499), np.float64(0.0858218789100647), np.float64(0.08805950880050659), np.float64(0.11032209396362305), np.float64(0.1504093289375305), np.float64(0.15100610256195068), np.float64(0.198323392868042), np.float64(0.19978007078170776), np.float64(0.24637939929962158), np.float64(0.2897894620895386), np.float64(0.47960623502731325)]
y5 = [np.float64(0.0035837173461914064), np.float64(0.0043140769004821776), np.float64(0.006754922866821289), np.float64(0.008419334888458252), np.float64(0.008178257942199707), np.float64(0.014429199695587158), np.float64(0.014025998115539551), np.float64(0.014470994472503662), np.float64(0.014418137073516846), np.float64(0.014566993713378907), np.float64(0.014083611965179443), np.float64(0.014409899711608887), np.float64(0.015262901782989502), np.float64(0.01664937734603882), np.float64(0.01896378993988037), np.float64(0.03363956212997436), np.float64(0.024972128868103027), np.float64(0.024062716960906984), np.float64(0.02702723741531372), np.float64(0.036403107643127444), np.float64(0.03416283130645752), np.float64(0.03192633390426636), np.float64(0.034521055221557614), np.float64(0.03821207284927368), np.float64(0.038854897022247314), np.float64(0.056626510620117185), np.float64(0.05953048467636109), np.float64(0.0570411205291748), np.float64(0.058214211463928224), np.float64(0.07657123804092407), np.float64(0.07523136138916016), np.float64(0.17432600259780884), np.float64(0.10156099796295166), np.float64(0.10446007251739502), np.float64(0.11605685949325562), np.float64(0.13510955572128297), np.float64(0.14963217973709106), np.float64(0.15349539518356323), np.float64(0.2390868306159973), np.float64(0.4764948010444641), np.float64(0.30259616374969484), np.float64(0.30592180490493776), np.float64(0.40245517492294314), np.float64(0.5025433421134948), np.float64(0.5064205527305603), np.float64(1.1844215393066406), np.float64(0.674577271938324), np.float64(0.8486524105072022), np.float64(0.9552456974983216), np.float64(1.6152544856071471)]
plt.figure(figsize=(14, 6))

plt.plot(x, y1, marker='o', color='blue', label='Nearest Neighbor')
plt.plot(x, y2, marker='s', color='red', label='Nearest Insertion')
plt.plot(x, y3, marker='d', color='purple', label='Cheapest Insertion versione 3')
plt.plot(x, y4, marker='^', color='green', label='Farthest Insertion')
plt.plot(x, y5, marker='*', color='orange', label='Furthest Insertion versione 2')

plt.xticks(rotation=45)
plt.xlabel('Prime 30 istanze TSP da TSP-LIB')
plt.ylabel('Tempi medi (secondi)')
plt.yscale('log')
plt.title('Tempi medi per le prime 50 istanze dal TSP-LIB')
plt.legend()  # Show legend based on labels

plt.grid(True)
plt.tight_layout()
plt.savefig("/home/asaf/Desktop/Furthest-insertion/Grafici/11.png")
plt.show()

