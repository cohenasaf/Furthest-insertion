import matplotlib.pyplot as plt
import numpy as np

l = [('eil51', 1), ('berlin52', 1), ('st70', 2), ('pr76', 1), ('eil76', 1), ('rat99', 1), ('kroD100', 3), ('kroA100', 1), ('kroC100', 1), ('kroB100', 1), ('kroE100', 1), ('rd100', 1), ('eil101', 1), ('lin105', 1), ('pr107', 3), ('pr124', 3), ('bier127', 2), ('ch130', 3), ('pr136', 1), ('pr144', 3), ('kroA150', 3), ('ch150', 1), ('kroB150', 3), ('pr152', 1), ('u159', 3), ('rat195', 1), ('d198', 3), ('kroA200', 1), ('kroB200', 3), ('ts225', 2), ('tsp225', 3), ('pr226', 1), ('gil262', 1), ('pr264', 3), ('a280', 1), ('pr299', 2), ('lin318', 3), ('linhp318', 3), ('rd400', 3), ('fl417', 1), ('pr439', 2), ('pcb442', 3), ('d493', 1), ('u574', 3), ('rat575', 3), ('p654', 3), ('d657', 3), ('u724', 3), ('rat783', 3), ('pr1002', 2)]
dF = {'eil51': 3, 'berlin52': 3, 'st70': 3, 'pr76': 3, 'eil76': 5, 'rat99': 3, 'kroD100': 3, 'kroA100': 3, 'kroC100': 3, 'kroB100': 3, 'kroE100': 3, 'rd100': 3, 'eil101': 5, 'lin105': 3, 'pr107': 3, 'pr124': 3, 'bier127': 6, 'ch130': 3, 'pr136': 3, 'pr144': 3, 'kroA150': 5, 'ch150': 4, 'kroB150': 3, 'pr152': 3, 'u159': 3, 'rat195': 5, 'd198': 6, 'kroA200': 5, 'kroB200': 3, 'ts225': 6, 'tsp225': 4, 'pr226': 3, 'gil262': 6, 'pr264': 6, 'a280': 6, 'pr299': 3, 'lin318': 5, 'linhp318': 5, 'rd400': 6, 'fl417': 3, 'pr439': 6, 'pcb442': 6, 'd493': 6, 'u574': 6, 'rat575': 5, 'p654': 3, 'd657': 6, 'u724': 6, 'rat783': 6, 'pr1002': 6}

# Sample data (4 lists)
x = [x[0] for x in l[:50]]

y1 = [np.float64(0.003444521042990914), np.float64(0.0050092948946935546), np.float64(0.00347061917754747), np.float64(0.001401159016695444), np.float64(0.0038819490101388112), np.float64(0.002814859576897089), np.float64(0.0024140326659769984), np.float64(0.0014074169372604865), np.float64(0.0034789401883453613), np.float64(0.002928400345714856), np.float64(0.00267847477161957), np.float64(0.0021829401286503113), np.float64(0.004914545489110138), np.float64(0.004815376213853529), np.float64(0.004550503473192626), np.float64(0.0024071856059497995), np.float64(0.0021389801066882983), np.float64(0.002663946850839085), np.float64(0.0021477346561230275), np.float64(0.002362272137716262), np.float64(0.0007992735429952675), np.float64(0.0012865311855620686), np.float64(0.0030740763140747447), np.float64(0.0013340705733789673), np.float64(0.0016158482786715251), np.float64(0.001819629385658417), np.float64(0.001498117620513975), np.float64(0.0018076001659878588), np.float64(0.0006832455974247992), np.float64(0.000804559403905589), np.float64(0.0011901553419546118), np.float64(0.0036447973029001997), np.float64(0.001038360695589486), np.float64(0.0004624329957423912), np.float64(0.002407336803755193), np.float64(0.00405508000371942), np.float64(0.00046561427610450546), np.float64(0.001256180884094419), np.float64(0.000560336529323538), np.float64(0.0013895681049594217), np.float64(0.0012095761043159827), np.float64(0.000800486534236719), np.float64(0.0011919478990204955), np.float64(0.0003577352821353387), np.float64(0.0003642342589185121), np.float64(0.0019223722239863866), np.float64(0.00043941211439580373), np.float64(0.0011541064166896427), np.float64(0.0007056235563796509), np.float64(0.0012850150906826478)]
y2 = [np.float64(0.0004573034459922127), np.float64(0.0006499881388421626), np.float64(0.0009579222721389502), np.float64(0.002145577008687484), np.float64(0.0002471454582432242), np.float64(0.0007996941291050457), np.float64(0.0007664743081017414), np.float64(0.0013836084917797453), np.float64(0.0007707535050296958), np.float64(0.0006128160535174981), np.float64(0.00048703797366730857), np.float64(0.0001939596425155647), np.float64(0.0002024017614650106), np.float64(0.001962554499377151), np.float64(0.000393087702455184), np.float64(0.002469292998897494), np.float64(0.00015279778096396137), np.float64(0.0007516324127205558), np.float64(0.00027608706254459315), np.float64(0.004438609835773347), np.float64(0.0007915963789481851), np.float64(0.0003501284296199387), np.float64(0.0004889459766750847), np.float64(0.0006399977334265932), np.float64(0.0012786550257798694), np.float64(0.0006089079823432835), np.float64(0.00027633255486186393), np.float64(0.0003635744079220118), np.float64(0.0005051027084545975), np.float64(0.0013814561628342796), np.float64(0.0004533416415188222), np.float64(0.0019672890286265643), np.float64(0.00020670209704884635), np.float64(0.0004886164795786416), np.float64(0.0003502193447340173), np.float64(0.0004265870860913259), np.float64(0.00013720812545586726), np.float64(0.00021729415970357432), np.float64(5.2255072798845945e-05), np.float64(0.001078242496608665), np.float64(9.533856263070731e-05), np.float64(0.00019726584738216928), np.float64(5.5415456846390156e-05), np.float64(7.516469875597626e-05), np.float64(0.00010455318009293818), np.float64(0.0012078257819051225), np.float64(0.00011042225244634692), np.float64(0.0001356244265042945), np.float64(0.00015638137466597967), np.float64(5.941226552119571e-05)]
y3 = [np.float64(0.0009558352318454491), np.float64(0.0008789278539319808), np.float64(0.0009587017553265303), np.float64(0.0016963438341093076), np.float64(0.00046914950488370833), np.float64(0.0010348602821120233), np.float64(0.000358634719261976), np.float64(0.0014545163421176345), np.float64(0.0015483174535027796), np.float64(0.0019117602817160877), np.float64(0.0019823121241572725), np.float64(0.0011475506613011098), np.float64(0.0009203751167146154), np.float64(0.002006446734878893), np.float64(0.0016687262645409214), np.float64(0.0015057931776581606), np.float64(0.00016467796103174017), np.float64(0.0005839835503545868), np.float64(0.0006996137702490334), np.float64(0.0016574432793125086), np.float64(0.0010179488066758356), np.float64(0.0011220994741007943), np.float64(0.0009732313882952146), np.float64(0.0008961581275269204), np.float64(0.00061975669561009), np.float64(0.0004783745520098415), np.float64(0.00019705183360762532), np.float64(0.000829635588608433), np.float64(0.0005017159667841289), np.float64(0.0015731720841366814), np.float64(0.0001246111864639973), np.float64(0.004282342284146738), np.float64(0.0007445359734678441), np.float64(0.0013720472358278294), np.float64(0.0006810712490212512), np.float64(0.00046795908839045804), np.float64(0.00060608589680464), np.float64(0.00034087889137031623), np.float64(0.00011212660153678989), np.float64(0.001866852804901563), np.float64(0.00021531485879307103), np.float64(0.00016831524753704768), np.float64(0.00010649910922836051), np.float64(3.2381918130364034e-05), np.float64(6.385049452828083e-05), np.float64(0.0003332883658332918), np.float64(0.00029134487090685046), np.float64(0.0001408781951118299), np.float64(5.346022089957967e-05), np.float64(0.00016376259711747097)]
y4 = [np.float64(0.00048035973342488194), np.float64(0.0009025624478303327), np.float64(0.0005974467259936871), np.float64(0.0008819863266192034), np.float64(0.00017952919625291067), np.float64(0.0005515654227209684), np.float64(0.00028067804982893283), np.float64(0.0008159764053660304), np.float64(0.001196816100499511), np.float64(0.0005159665048468028), np.float64(0.000261069234999008), np.float64(0.0008359162422434251), np.float64(0.00034655898875578884), np.float64(0.0006755047724039001), np.float64(2.5404823281868977e-05), np.float64(0.0008706326688276281), np.float64(0.0003506052171947898), np.float64(0.000254008704811063), np.float64(0.00022022949994989714), np.float64(0.00038653672683386646), np.float64(0.0003468391092579951), np.float64(0.0007880344520250432), np.float64(0.00035013329964768706), np.float64(0.00020052554424556892), np.float64(0.0011194621966183261), np.float64(0.0002454931481506795), np.float64(0.0003586610996730114), np.float64(0.00028433415646944186), np.float64(0.00041954644424990924), np.float64(0.0002939327031706287), np.float64(0.0004748054710625027), np.float64(0.00010204730326093283), np.float64(0.0003250380623167321), np.float64(0.00015026403448611323), np.float64(0.0004287782550355253), np.float64(0.0002693002807977611), np.float64(0.0003028541517006145), np.float64(0.00019599254627675758), np.float64(0.000162481138945955), np.float64(0.00083659882186784), np.float64(0.0007197756694592042), np.float64(0.0001411485569019648), np.float64(0.00016344354868899809), np.float64(6.213226618418798e-05), np.float64(7.897009580810715e-05), np.float64(0.0012424917517042983), np.float64(0.0001292135492475205), np.float64(6.511298077379507e-05), np.float64(8.576257874286907e-05), np.float64(0.00015211290839544977)]
y5 = [np.float64(9.673476775263087e-05), np.float64(0.00036469676682058784), np.float64(0.0004816429697614984), np.float64(0.0015774507613858023), np.float64(0.000283158219118698), np.float64(0.00032473009906687923), np.float64(0.00027581224270106124), np.float64(0.00064683632581205), np.float64(0.000353836116319773), np.float64(0.00028617090724867287), np.float64(0.000338726826831138), np.float64(0.0008411634448973838), np.float64(0.00022129071638536522), np.float64(0.0006443094314134577), np.float64(6.278332301188604e-05), np.float64(0.00048226677460442457), np.float64(0.0007916875943651477), np.float64(0.0005727145505582427), np.float64(0.0003609203413134506), np.float64(0.0012764845586354743), np.float64(0.00039794005547521963), np.float64(0.0004710235010624522), np.float64(0.00040819304224266694), np.float64(0.000744355863663517), np.float64(0.0015926531997991558), np.float64(0.00045503313955937613), np.float64(0.000466629059014613), np.float64(0.00044848535562246777), np.float64(0.0004395062022895126), np.float64(0.00038214146797461567), np.float64(0.00020419724795899154), np.float64(0.0002559413518499186), np.float64(0.00028177465294909056), np.float64(0.0001563233140627502), np.float64(0.000602332426472235), np.float64(0.000437108875129416), np.float64(0.00021386433976783282), np.float64(0.00032299538989211964), np.float64(0.0003391163712151165), np.float64(0.0005438429783859125), np.float64(0.0005848795663403977), np.float64(0.0002150769846095837), np.float64(0.00023138237755560665), np.float64(0.00019251428801354337), np.float64(8.267662753415724e-05), np.float64(0.0009950456677431157), np.float64(0.00018640661313932243), np.float64(9.948044777172908e-05), np.float64(8.040913687628402e-05), np.float64(8.990733573124732e-05)]

print(np.mean(y1))
print(np.mean(y2))
print(np.mean(y3))
print(np.mean(y4))
print(np.mean(y5))
exit()

# qualità Furthest

# Plotting each list with different color and marker
plt.figure(figsize=(14, 6))

plt.plot(x, y1, marker='o', color='blue', label='Nearest Neighbor')
plt.plot(x, y2, marker='s', color='red', label='Nearest Insertion')
plt.plot(x, y3, marker='d', color='purple', label='Cheapest Insertion versione 3')
plt.plot(x, y4, marker='^', color='green', label='Farthest Insertion')
plt.plot(x, y5, marker='*', color='orange', label='Furthest Insertion versione 2')

plt.xticks(rotation=45)
plt.xlabel('Prime 50 istanze TSP da TSP-LIB')
plt.ylabel('Varianza delle soluzioni trovate')
plt.yscale('log')
plt.title('Varianza delle soluzioni trovate')
plt.legend()  # Show legend based on labels

plt.grid(True)
plt.tight_layout()
plt.savefig("/home/asaf/Desktop/Furthest-insertion/Grafici/10.png")
plt.show()

