import matplotlib.pyplot as plt
import numpy as np

l = [('eil51', 1), ('berlin52', 1), ('st70', 2), ('pr76', 1), ('eil76', 1), ('rat99', 1), ('kroD100', 3), ('kroA100', 1), ('kroC100', 1), ('kroB100', 1), ('kroE100', 1), ('rd100', 1), ('eil101', 1), ('lin105', 1), ('pr107', 3), ('pr124', 3), ('bier127', 2), ('ch130', 3), ('pr136', 1), ('pr144', 3), ('kroA150', 3), ('ch150', 1), ('kroB150', 3), ('pr152', 1), ('u159', 3), ('rat195', 1), ('d198', 3), ('kroA200', 1), ('kroB200', 3), ('ts225', 2), ('tsp225', 3), ('pr226', 1), ('gil262', 1), ('pr264', 3), ('a280', 1), ('pr299', 2), ('lin318', 3), ('linhp318', 3), ('rd400', 3), ('fl417', 1), ('pr439', 2), ('pcb442', 3), ('d493', 1), ('u574', 3), ('rat575', 3), ('p654', 3), ('d657', 3), ('u724', 3), ('rat783', 3), ('pr1002', 2)]
dF = {'eil51': 3, 'berlin52': 3, 'st70': 3, 'pr76': 3, 'eil76': 5, 'rat99': 3, 'kroD100': 3, 'kroA100': 3, 'kroC100': 3, 'kroB100': 3, 'kroE100': 3, 'rd100': 3, 'eil101': 5, 'lin105': 3, 'pr107': 3, 'pr124': 3, 'bier127': 6, 'ch130': 3, 'pr136': 3, 'pr144': 3, 'kroA150': 5, 'ch150': 4, 'kroB150': 3, 'pr152': 3, 'u159': 3, 'rat195': 5, 'd198': 6, 'kroA200': 5, 'kroB200': 3, 'ts225': 6, 'tsp225': 4, 'pr226': 3, 'gil262': 6, 'pr264': 6, 'a280': 6, 'pr299': 3, 'lin318': 5, 'linhp318': 5, 'rd400': 6, 'fl417': 3, 'pr439': 6, 'pcb442': 6, 'd493': 6, 'u574': 6, 'rat575': 5, 'p654': 3, 'd657': 6, 'u724': 6, 'rat783': 6, 'pr1002': 6}

# Sample data (4 lists)
x = [x[0] for x in l[:50]]

y1 = [np.float64(6.637873411818874e-10), np.float64(1.4909785249983544e-09), np.float64(1.197516576212365e-09), np.float64(2.4710243451409043e-09), np.float64(2.6262515518737926e-09), np.float64(7.300041369262545e-09), np.float64(7.964308929331309e-09), np.float64(6.5015843290439085e-09), np.float64(8.58146620430489e-09), np.float64(7.998275441423175e-09), np.float64(6.280520636892105e-09), np.float64(5.106687575562319e-09), np.float64(8.360803184359609e-09), np.float64(7.980851358979633e-09), np.float64(5.310303657779513e-09), np.float64(7.780721125527633e-09), np.float64(1.0691925149330926e-08), np.float64(1.4840596185194957e-08), np.float64(2.0632283076338345e-08), np.float64(3.629971058103366e-08), np.float64(2.875020570058951e-08), np.float64(3.216399456960063e-08), np.float64(3.954058553858885e-08), np.float64(1.4794096949799495e-08), np.float64(1.5720522833362337e-08), np.float64(5.865633418125071e-08), np.float64(3.067812755830346e-08), np.float64(6.880210232793615e-08), np.float64(2.4651398325659106e-08), np.float64(5.842525033585844e-08), np.float64(1.0740509430320345e-07), np.float64(1.4363316884100644e-07), np.float64(7.257749733241781e-07), np.float64(8.187671902476268e-07), np.float64(1.466104302153326e-07), np.float64(3.4868527595790505e-07), np.float64(1.675452291408419e-07), np.float64(3.3165705540341157e-07), np.float64(2.0799129183387774e-06), np.float64(6.204083941781846e-07), np.float64(9.975583785205799e-07), np.float64(3.235496998712506e-06), np.float64(1.0021862583698748e-06), np.float64(1.3776417070573644e-06), np.float64(1.5123493342861138e-05), np.float64(1.535324303751508e-05), np.float64(4.563909103831065e-06), np.float64(5.227961442022889e-06), np.float64(3.0098584442521318e-05), np.float64(1.5814203879352818e-05)]
y2 = [np.float64(1.3875228432880248e-11), np.float64(1.3481047744789976e-11), np.float64(3.359195943630768e-12), np.float64(1.9888801716660967e-11), np.float64(1.861408236436546e-11), np.float64(1.3804282161800074e-11), np.float64(5.8179239204037e-12), np.float64(3.689944492180075e-11), np.float64(6.010973265802024e-11), np.float64(2.535614385124063e-11), np.float64(1.4211417465048731e-11), np.float64(3.770455805351958e-11), np.float64(8.091882364169577e-12), np.float64(2.37677966197225e-11), np.float64(4.372284365672384e-11), np.float64(4.1786387328102134e-11), np.float64(3.947629920730832e-11), np.float64(4.396097210701554e-11), np.float64(1.271244570943963e-10), np.float64(8.239550766120374e-11), np.float64(1.0878085845433816e-10), np.float64(4.7649172074670794e-11), np.float64(3.186684693901043e-11), np.float64(4.3422977569207423e-11), np.float64(3.539762474247255e-11), np.float64(3.750971586669038e-11), np.float64(3.423162411309023e-11), np.float64(8.988160402623181e-11), np.float64(1.1426882338128052e-10), np.float64(6.054094114915642e-11), np.float64(9.81817947831587e-11), np.float64(1.5538957995886447e-10), np.float64(3.9454901070712365e-10), np.float64(6.332118744012405e-10), np.float64(2.497622290320578e-10), np.float64(3.487381491140695e-10), np.float64(9.695074822957397e-11), np.float64(1.7681742860986561e-10), np.float64(9.907503851991351e-10), np.float64(4.5555436258837286e-10), np.float64(5.376416766011971e-10), np.float64(6.891104703754534e-10), np.float64(7.319096084756893e-10), np.float64(8.895211692561135e-10), np.float64(1.0238469258183614e-09), np.float64(1.6715823392132729e-09), np.float64(1.0255158940708497e-09), np.float64(1.4063737751257574e-09), np.float64(1.8202161470526338e-09), np.float64(5.779378341230767e-10)]

# qualit√† Furthest

# Plotting each list with different color and marker
plt.figure(figsize=(14, 6))

plt.plot(x, y1, marker='o', color='blue', label='Random Insertion')
plt.plot(x, y2, marker='s', color='red', label='Random Insertion versione 2')

plt.xticks(rotation=45)
plt.xlabel('Prime 50 istanze TSP da TSP-LIB')
plt.ylabel('Varianza dei tempi di Random Insertion')
plt.yscale('log')
plt.title('Varianza dei tempi di Random Insertion')
plt.legend()  # Show legend based on labels

plt.grid(True)
plt.tight_layout()
plt.savefig("/home/asaf/Desktop/Furthest-insertion/Grafici/17.png")
plt.show()

